Folder and fit overview

###################
repeat old examples
###################
run_BatchMultiFit_20180809.m



#########################
dilute SSS 0p0 suspension
#########################

run_BatchMultiFit_20180812.m

	(* with ycohscf *)
	expfileconc={"export/im_0047273_caz_s-scale.chi",0.01}; (* use scaling factor since conc is not really known *)
	OutDir="MathematicaOut/SSS_4to1dil_001/";




run_BatchMultiFit_20180821.m

	test diff Min algs with 1% conc. and huge scaling factors

	(* with ycohscf, {Chi2,"red"} *)
	OutDir="MathematicaOut/SSS_4to1dil_002/";
	expfileconc={"export/im_0047273_caz_s-scale.chi",0.01}; (* use scaling factor since conc is not really known *)
	Nmaxsp=6;
	FitMethod="DifferentialEvolution";
	FitMaxIt=1000;
	FitTarF={Chi2,"red"};


	(* with ycohscf, T *)
	OutDir="MathematicaOut/SSS_4to1dil_003/";
	expfileconc={"export/im_0047273_caz_s-scale.chi",0.01}; (* use scaling factor since conc is not really known *)
	Nmaxsp=6;
	FitMethod="DifferentialEvolution";
	FitMaxIt=1000;


	(* with ycohscf, {Chi2,"red"}, with dI *)
	OutDir="MathematicaOut/SSS_4to1dil_004/";
	expfileconc={"export/im_0047273_caz_s-scaled_sIdI.chi",0.01}; (* use scaling factor since conc is not really known *)
	Nmaxsp=6;
	FitMethod="DifferentialEvolution";
	FitMaxIt=1000;
	FitTarF={Chi2,"red"};


	(* with ycohscf, {Chi2,"red"}, with dI, FindMinimum *)
	OutDir="MathematicaOut/SSS_4to1dil_005/";
	expfileconc={"export/im_0047273_caz_s-scaled_sIdI.chi",0.01}; (* use scaling factor since conc is not really known *)
	Nmaxsp=6;
	Nmaxst=0;
	FitFunc=FindMinimum;
	FitMethod="Automatic";


	(* with ycohscf, {Chi2,"red"}, with dI, postprocess DiffEvol *)
	OutDir="MathematicaOut/SSS_4to1dil_006/";
	expfileconc={"export/im_0047273_caz_s-scaled_sIdI.chi",0.01}; (* use scaling factor since conc is not really known *)
	Nmaxsp=6;
	FitMethod={"DifferentialEvolution","PostProcess"->True};
	FitMaxIt=1000;
	FitTarF={Chi2,"red"};


	(* with ycohscf, {Chi2,"red"}, with dI, postprocess RandomSearch with InteriorPoint *)
	OutDir="MathematicaOut/SSS_4to1dil_007/";
	expfileconc={"export/im_0047273_caz_s-scaled_sIdI.chi",0.01}; (* use scaling factor since conc is not really known *)
	Nmaxsp=6;
	FitMethod={"RandomSearch","PostProcess"->"InteriorPoint"};
	Fitsmin=0.01;
	Fitsmax=0.37;
	FitMaxIt=1000;
	FitTarF={Chi2,"red"};
	ParStart={{"c1",True,0.0},{"c2",True,0.1},{"c3",True,0.4},{"c4",True,0.4},{"c5",True,0.1},{"c6",True,0.0},{"rhoisl",True,0,"270<#<360"},{"rhoosl",True,0,"270<#<360"},{"rhodm",True,0,"333<#<345"},{"Xa",True,0.005,"0.001<#<0.009"}};

	same ParStart and s-range for others


	-> Chi2 with dI seems to work as good as T (log Chi2) for the unloaded sample



####################################
native SSS 0p0 and loaded suspension
####################################

run_BatchMultiFit_20181130.m

	use T vs Chi2Red Min algs with 20% conc. and small scaling factors

	(* with ycohscf, T *)
	OutDir="MathematicaOut/SSS_3pBC_native_001/";
	expfileconc={"export/im_0047237_caz_s-scaled_sIdI.chi",0.2}; (* scale with approx. overall SSS onc *)
	Nmaxsp=5;
	FitFunc=NMinimize;
	FitMethod="DifferentialEvolution";
	Fitsmin=0.01;
	Fitsmax=0.37;
	FitMaxIt=1000;
	FitTarF=T;
	ParStart={{"c1",True,0.0},{"c2",True,0.3},{"c3",True,0.4},{"c4",True,0.3},{"c5",True,0.0},{"rhoisl",True,0,"270<#<370"},{"rhoosl",True,0,"270<#<370"},{"rhodm",True,0,"333<#<345"},{"Xa",True,0.005,"0.006<#<0.018"}};


	(* with ycohscf, T *)
	OutDir="MathematicaOut/SSS_5pBC_native_001/";
	expfileconc={"export/im_0047239_caz_s-scaled_sIdI.chi",0.2}; (* scale with approx. overall SSS onc *)
	Nmaxsp=5;
	FitFunc=NMinimize;
	FitMethod="DifferentialEvolution";


	(* with ycohscf, T *)
	OutDir="MathematicaOut/SSS_7p5pBC_native_001/";
	expfileconc={"export/im_0047240_caz_s-scaled_sIdI.chi",0.2}; (* scale with approx. overall SSS onc *)
	Nmaxsp=5;
	FitFunc=NMinimize;
	FitMethod="DifferentialEvolution";


	(* with ycohscf, T, fixed rhoisl to BC *)
	OutDir="MathematicaOut/SSS_3pBC_native_002/";
	expfileconc={"export/im_0047237_caz_s-scaled_sIdI.chi",0.2}; (* scale with approx. overall SSS onc *)
	Nmaxsp=5;
	FitFunc=NMinimize;
	FitMethod="DifferentialEvolution";


	(* with ycohscf, T, fixed rhoisl to BC *)
	OutDir="MathematicaOut/SSS_5pBC_native_002/";
	expfileconc={"export/im_0047239_caz_s-scaled_sIdI.chi",0.2}; (* scale with approx. overall SSS onc *)
	Nmaxsp=5;
	FitFunc=NMinimize;
	FitMethod="DifferentialEvolution";


	(* with ycohscf, T, fixed rhoisl to BC *)
	OutDir="MathematicaOut/SSS_7p5pBC_native_002/";
	expfileconc={"export/im_0047240_caz_s-scaled_sIdI.chi",0.2}; (* scale with approx. overall SSS onc *)
	Nmaxsp=5;
	FitFunc=NMinimize;
	FitMethod="DifferentialEvolution";


	(* with ycohscf, T, fixed rhoosl to BC *)
	OutDir="MathematicaOut/SSS_3pBC_native_003/";
	expfileconc={"export/im_0047237_caz_s-scaled_sIdI.chi",0.2}; (* scale with approx. overall SSS onc *)
	Nmaxsp=5;
	FitFunc=NMinimize;
	FitMethod="DifferentialEvolution";


	(* with ycohscf, T, fixed rhoosl to BC *)
	OutDir="MathematicaOut/SSS_5pBC_native_003/";
	expfileconc={"export/im_0047239_caz_s-scaled_sIdI.chi",0.2}; (* scale with approx. overall SSS onc *)
	Nmaxsp=5;
	FitFunc=NMinimize;
	FitMethod="DifferentialEvolution";


	(* with ycohscf, T, fixed rhoosl to BC *)
	OutDir="MathematicaOut/SSS_7p5pBC_native_003/";
	expfileconc={"export/im_0047240_caz_s-scaled_sIdI.chi",0.2}; (* scale with approx. overall SSS onc *)
	Nmaxsp=5;
	FitFunc=NMinimize;
	FitMethod="DifferentialEvolution";




####################################
dilute SSS 0p0 and loaded suspension
####################################

expdata (use SSS conc):
expfileconc={"export/im_0051238_caz_CapA_0p0BC_1to5dil-H2O_s-scaled_sIdI.chi",0.0317};
expfileconc={"export/im_0051239_caz_CapB_3p0BC_1to5dil-H2O_s-scaled_sIdI.chi",0.0267};
expfileconc={"export/im_0051247_caz_CapA_5p0BC_1to5dil-H2O_s-scaled_sIdI.chi",0.0233};
expfileconc={"export/im_0051251_caz_CapA_7p5BC_1to5dil-H2O_s-scaled_sIdI.chi",0.0192};




run_BatchMultiFit_20190110.m

	Yfiles (normalized with VCRY):
	disl=4:2:20, dosl=4:2:20
	Nsp=6
	YFileList=FileNames[YFileDir<>"SSS_180x360_P*_ST_360_400_N100.log"];


	(* with 0.8 < ycohscf < 1.2, T *)
	OutDir="MathematicaOut/SSS_*BC_1to5dil_001/";

	(* with 0.8 < ycohscf < 1.2, ChiRed2 *)
	OutDir="MathematicaOut/SSS_*BC_1to5dil_002/";

	(*
	for both 001 and 002 chiXn1 scale factor is always at maximum of 1.2, that means a conc of 1.2*3.17=3.80%
	for old 1:4 dil data simulations gave 7.02*1.0=7.02%

	After correction for thickness difference, old data is 1.5/1.2 too low, thus 7.02*1.0*1.5/1.2=8.78%

	different SSS conc.
	1:4 19/5=3.80%
	1:5 19/5=3.17%

	allow a chiXn1 of [0.5,2.0] in 003 and 004
	*)


	(* with 0.5 < ycohscf < 2, T *)
	OutDir="MathematicaOut/SSS_*BC_1to5dil_003/";

	best fits (T):
	BC 	Tmin	disl	dosl
	0p0	2.49652	18	14
	3p0	1.91418	18	20
	5p0	1.87615	18	20
	7p5	1.6957	18	18


	(* with 0.5 < ycohscf < 2, ChiRed2 *)
	OutDir="MathematicaOut/SSS_*BC_1to5dil_004/";

	best fits (Chi2Red):
	BC 	Chi2Redmin	disl	dosl
	0p0	4.36958		16	14
	3p0	3.16298		04	04
	5p0	3.20222		04	04
	7p5	2.36722		04	10


	-> as for old data chiXn1 (1.93-1.97) is about two times too high, do same as 003 and 004 for loaded samples
	-> disl and dosl quite distinct btw Tmin and Chi2Red opt.

	-> cause of high loading of stabilizers and BC thicker shells should be simulated


run_BatchMultiFit_20190120.m
run_BatchMultiFit_20190121.m
run_BatchMultiFit_20190122.m
run_BatchMultiFit_20190123.m


	Yfiles (normalized with VCRY):
	disl=4:4:144, dosl=4:4:144, disl+dosl<150
	Nsp=6 
	YFileList=FileNames[YFileDir<>"SSS_180x360_P*_ST_360_400_N50.log"];

	(* with 0.5 < ycohscf < 2, T *)
	OutDir="MathematicaOut/SSS_*BC_1to5dil_005/";

	best fits (T):
	BC 	Tmin	disl	dosl
	0p0	2.50882	020	012	and around (incl 12/20), quite some diff btw good and bad fits, ~ 340 350 340, ici 3.6-3.8, c3+c4 ~ 0.8, chiXn ~1.95
	3p0	1.83615	012	040	and around (8-16/20-52), quite some diff btw good and bad fits, ~ 325 345 338, ici 3.1-3.3, cis 0.1-0.2 0.1 0.45 0.2 0.1 0.05, chiXn ~1.7-1.8
	5p0	1.79714	012	040	and around (8-16/20-52), quite some diff btw good and bad fits, ~ 325 340-345 337, ici 2.8-3.0, cis 0.15 0.15 0.5 0.2 0.1 0.05, chiXn ~1.9
	7p5	1.70363	012	084	and around (8-16/4-144), some diff btw good and bad fits, ~ 325 334 334, ici 2.4-2.6, cis 0.3 0.15 0.5 0.1 0.05 0.0, chiXn ~1.9, dosl completely ill-defined, but dosl rhoosl also not bound since rhoosl is for most good fits around 337


	(* with 0.5 < ycohscf < 2, ChiRed2 *)
	OutDir="MathematicaOut/SSS_*BC_1to5dil_006/";

	best fits (Chi2Red):
	BC 	Tmin	disl	dosl
	0p0	4.62633	012	020	and 2 others around, quite some diff btw good and bad fits, ~ 335 350 340, ici 3.6-3.8, c3+c4 ~ 0.8, chiXn ~1.95
	3p0	2.40822	012	040	and 2 others around, some diff btw good and bad fits, ~ 325 340 338, ici 3.1, cis 0.15 0.1 0.4 0.15 0.15 0.05, chiXn ~1.8
	5p0	2.89352	012	040	and 4 others around, some diff btw good and bad fits, ~ 325 338 337, ici 2.9, cis 0.2 0.1 0.5 0.15 0.1 0.0, chiXn ~1.95
	7p5	1.49595	012	088	and around (12/76-108), some diff btw good and bad fits, ~ 323 334 334, ici 2.4, cis 0.3 0.15 0.5 0.05 0.05 0.0, chiXn 2.0


	-> more or less same best fits btw 005 and 006, however good fits range much less in 006 due to non-logarithmic Chi2 design.
	-> with more BC chiXn1 increases to limit 2, while rhodm decreases from 340 to 334, too providing also higher intensities
	-> fixing rhodm to 334 will fail, however within 1%, i.e. [330.5,337.5] might still work for all sets
	-> with higher BC loading, SLD of osl decreases to rhodm, while dosl significantly increases

		dtot	ici	dtot_exp (from xls using ici and composition)
	0p0	32	3.7	48
	3p0	52	3.1	61
	5p0	52	2.9	75
	7p5	ca. 100	2.4	87

	-> wuerde wrt ED and disl & dosl bis auf 0p0 relativ gut mit model passen dass isl=PC+ATOC und OSL=TW80+BC
	-> 0p0 sonderfall, rhoisl zu hoch dafuer (disl passt), rhoosl passt, aber dosl zu klein, rhodm generell zu hoch fuer 0p0 (340)
	-> also ATOC und PC bevorzugt auf SSS, darueber legt sich dann BC und TW80
	-> chiXn1 weiterhin problematisch
	-> rhodm largest for 0p0 where TW80 is missing in osl, monomers in solution, which decrease when adding BC, since rhodm converges to rhodm(H2O) for higher loadings




new simulations with VOSL norm. and phi_tot scaling instead of VCRY norm. and phi_cry scaling


expdata (use total lipid conc):
expfileconc={"export/im_0051238_caz_CapA_0p0BC_1to5dil-H2O_s-scaled_sIdI.chi",0.05};
expfileconc={"export/im_0051239_caz_CapB_3p0BC_1to5dil-H2O_s-scaled_sIdI.chi",0.05};
expfileconc={"export/im_0051247_caz_CapA_5p0BC_1to5dil-H2O_s-scaled_sIdI.chi",0.05};
expfileconc={"export/im_0051251_caz_CapA_7p5BC_1to5dil-H2O_s-scaled_sIdI.chi",0.05};


run_BatchMultiFit_20190125.m


	Yfiles (normalized with VOSL):
	disl=4:4:144, dosl=4:4:144, disl+dosl<150
	Nsp=6 
	YFileList=FileNames[YFileDir<>"SSS_180x360_P*_ST_360_400_N50_OSL.log"];

	(* with 0.5 < ycohscf < 2, T *)
	OutDir="MathematicaOut/SSS_*BC_1to5dil_OSL_005/";

	best fits (T):
	BC 	Tmin	disl	dosl
	0p0	2.50882	020	012	and around (incl 12/20), quite some diff btw good and bad fits, ~ 340 350 340, ici 3.6-3.8, c3+c4 ~ 0.8, chiXn ~1.95
	3p0	1.83615	012	040	and around (8-16/20-52), quite some diff btw good and bad fits, ~ 325 345 338, ici 3.1-3.3, cis 0.1-0.2 0.1 0.45 0.2 0.1 0.05, chiXn ~1.7-1.8
	5p0	1.79714	012	040	and around (8-16/20-52), quite some diff btw good and bad fits, ~ 325 340-345 337, ici 2.8-3.0, cis 0.15 0.15 0.5 0.2 0.1 0.05, chiXn ~1.9
	7p5	1.68604	004	004	and around (8-16/4-144), some diff btw good and bad fits, ~ 325 334 334, ici 2.4-2.6, cis 0.3 0.15 0.5 0.1 0.05 0.0, chiXn ~1.9, dosl completely ill-defined, but dosl rhoosl also not bound since rhoosl is for most good fits around 337

	-> except 7p5 the best fits are the same for VOSL approach as for VCRY


	(* with 0.5 < ycohscf < 2, ChiRed2 *)
	OutDir="MathematicaOut/SSS_*BC_1to5dil_OSL_006/";

	best fits (Chi2Red):
	BC 	Tmin	disl	dosl
	0p0	4.62633	012	020	and 2 others around, quite some diff btw good and bad fits, ~ 335 350 340, ici 3.6-3.8, c3+c4 ~ 0.8, chiXn ~1.95
	3p0	2.40823	012	040	and 2 others around, some diff btw good and bad fits, ~ 325 340 338, ici 3.1, cis 0.15 0.1 0.4 0.15 0.15 0.05, chiXn ~1.8
	5p0	2.24334	004	008	and 4 others around, some diff btw good and bad fits, ~ 325 338 337, ici 2.9, cis 0.2 0.1 0.5 0.15 0.1 0.0, chiXn ~1.95
	7p5	1.85304	012	068	and around (12/76-108), some diff btw good and bad fits, ~ 323 334 334, ici 2.4, cis 0.3 0.15 0.5 0.05 0.05 0.0, chiXn 2.0

	-> for 0p0 and 3p0 same best fits for VOSL approach as for VCRY








run_BatchMultiFit_20190126.m

	(* with 0.75 < ycohscf < 1.25, T and rhodm fixed to 334 *)
	OutDir="MathematicaOut/SSS_[0,3]BC_1to5dil_OSL_007/";

	best fits (T):
	BC 	Tmin	disl	dosl
	0p0	6.36633	024	004
	3p0	2.96968	004	036	(only 266 out of 666 sim. fitted)

	-> does not fit well 0p0 data



run_BatchMultiFit_20190130.m

	(* with 0.5 < ycohscf < 2, T and rhodm in [330.5,337.5] *)
	OutDir="MathematicaOut/SSS_*BC_1to5dil_OSL_009/";

	BC 	Tmin	disl	dosl
	0p0	4.04751	024	004

	-> does not fit well 0p0 data






#########################################################
individual contribution plots for dilute 0p0 and 3p0 fits
#########################################################



new subroutine BatchMultiPlot in BatchMultiFit.m

run_BatchMultiPlot_20190227.m






(* 0p0 1to5dil OSL_005/ with VOSL conc *)

(* Load XNDiff output data *)
(* Yfiles must match those from fits !!! *)
YFileDir="out/";
YFileList=FileNames[YFileDir<>"SSS_180x360_P020_012_ST_360_400_N50_OSL.log"];
YFileList=StringTrim[StringTrim[#,YFileDir],".log"]&/@YFileList;

(*plot*)
(*
OutDir="MathematicaOut/SSS_0p0BC_1to5dil_OSL_005_plot/";
Xnmode="X";
expfileconc={"export/im_0051238_caz_CapA_0p0BC_1to5dil-H2O_s-scaled_sIdI.chi",0.05};
Nmaxsp=6;
Nmaxst=0;
Fitsmin=0.0085;
Fitsmax=0.37;
ParStart={{c1,0.052586372247525714},{c2,0.004510639736581632},{c3,0.42054301527185284},{c4,0.35619147143577523},{c5,0.11911260635744349},{c6,0.047055894950821076},{rhoisl,339.79942098618864},{rhoosl,351.7491919219455},{rhodm,339.9999999998499},{Xa,0.00244205907423795}};
ycohscf={1.8187777296904648};
PlRange={{0.002,0.5},{10^-3,10^2}};
plsc=1;(*Default is 1 *)
Ymode=1;(*Default is 1 *)
Smear={0,0.0};(*Default*)
Tscf=1.0;(*Default is 1.0 *)
PlotFlag=True;(*Default is True *)
ow=True;(*Default is False *)
BatchMultiPlot[OutDir,Xnmode,expfileconc,YFileDir,YFileList,Nmaxsp,Nmaxst,Fitsmin,Fitsmax,ParStart,ycohscf,PlRange,plsc,Ymode,Smear,Tscf,PlotFlag,ow]
*)



(* 0p0 1to5dil OSL_005/ with VOSL conc *)

(* Load XNDiff output data *)
(* Yfiles must match those from fits !!! *)
YFileDir="out/";
YFileList=FileNames[YFileDir<>"SSS_180x360_P012_040_ST_360_400_N50_OSL.log"];
YFileList=StringTrim[StringTrim[#,YFileDir],".log"]&/@YFileList;

(*plot*)
OutDir="MathematicaOut/SSS_3p0BC_1to5dil_OSL_005_plot/";





################################################
LARGER vs normal vs SMALLER simulations and fits
################################################

xmgrace plots basically same except low Q

chiXn differences in fits, little diff in fit params?



SetDirectory["/home/martins/projects/BatchMultiFit"];



(* Load XNDiff output data, Y-files for dilute SSS suspension *)
YFileDir="out/";
YFileList=FileNames[YFileDir<>"SSS_180x360_P*_N50_OSL_LARGER.log"];
YFileList=StringTrim[StringTrim[#,YFileDir],".log"]&/@YFileList;




(* with ycohscf(0.5-2.5), T *)
OutDir="MathematicaOut/SSS_0p0BC_1to5dil_OSL_LARGER_005/";
Xnmode="X";
expfileconc={"export/im_0051238_caz_CapA_0p0BC_1to5dil-H2O_s-scaled_sIdI.chi",0.05};
Nmaxsp=6;
Nmaxst=0;
FitFunc=NMinimize;
FitMethod="DifferentialEvolution";
Fitsmin=0.0085;
Fitsmax=0.37;
FitMaxIt=1000;
FitTarF=T;
ParStart={{"c1",True,0.2},{"c2",True,0.3},{"c3",True,0.3},{"c4",True,0.1},{"c5",True,0.1},{"c6",True,0.0},{"rhoisl",True,0,"270<#<400"},{"rhoosl",True,0,"270<#<400"},{"rhodm",True,0,"333<#<340"},{"Xa",True,0.002,"0.001<#<0.005"}};
PlRange={{0.002,0.5},{10^-3,10^2}};
plsc=1; (* Default *)
Ymode=1; (* Default *)
AddConstraints={}; (* Default *)
Smear={0,0.0}; (* Default *)
Tscf=1.0; (* Default *)
ycohscf={True,1.0,"0.5<#<2.5"};
LicoConstr={"","==1.0"}; (* Default *)
ExportFlag=True;
Print[AbsoluteTiming[BatchMultiFit[OutDir,Xnmode,expfileconc,YFileDir,YFileList,Nmaxsp,Nmaxst,FitFunc,FitMethod,Fitsmin,Fitsmax,FitMaxIt,FitTarF,ParStart,PlRange,plsc,Ymode,AddConstraints,Smear,Tscf,ycohscf,LicoConstr,ExportFlag]][[1]]]


(* with ycohscf(0.5-2.5), T *)
OutDir="MathematicaOut/SSS_3p0BC_1to5dil_OSL_LARGER_005/";
Xnmode="X";
expfileconc={"export/im_0051239_caz_CapB_3p0BC_1to5dil-H2O_s-scaled_sIdI.chi",0.05};
Nmaxsp=6;
Nmaxst=0;
FitFunc=NMinimize;
FitMethod="DifferentialEvolution";
Fitsmin=0.0085;
Fitsmax=0.37;
FitMaxIt=1000;
FitTarF=T;
ParStart={{"c1",True,0.2},{"c2",True,0.3},{"c3",True,0.3},{"c4",True,0.1},{"c5",True,0.1},{"c6",True,0.0},{"rhoisl",True,0,"270<#<400"},{"rhoosl",True,0,"270<#<400"},{"rhodm",True,0,"333<#<340"},{"Xa",True,0.002,"0.001<#<0.005"}};PlRange={{0.002,0.5},{10^-3,10^2}};
plsc=1; (* Default *)
Ymode=1; (* Default *)
AddConstraints={}; (* Default *)
Smear={0,0.0}; (* Default *)
Tscf=1.0; (* Default *)
ycohscf={True,1.0,"0.5<#<2.5"};
LicoConstr={"","==1.0"}; (* Default *)
ExportFlag=True;
Print[AbsoluteTiming[BatchMultiFit[OutDir,Xnmode,expfileconc,YFileDir,YFileList,Nmaxsp,Nmaxst,FitFunc,FitMethod,Fitsmin,Fitsmax,FitMaxIt,FitTarF,ParStart,PlRange,plsc,Ymode,AddConstraints,Smear,Tscf,ycohscf,LicoConstr,ExportFlag]][[1]]];






(* Load XNDiff output data, Y-files for dilute SSS suspension *)
YFileDir="out/";
YFileList=FileNames[YFileDir<>"SSS_180x360_P*_N50_OSL_SMALLER.log"];
YFileList=StringTrim[StringTrim[#,YFileDir],".log"]&/@YFileList;




(* with ycohscf(0.5-2.5), T *)
OutDir="MathematicaOut/SSS_0p0BC_1to5dil_OSL_SMALLER_005/";
Xnmode="X";
expfileconc={"export/im_0051238_caz_CapA_0p0BC_1to5dil-H2O_s-scaled_sIdI.chi",0.05};
Nmaxsp=6;
Nmaxst=0;
FitFunc=NMinimize;
FitMethod="DifferentialEvolution";
Fitsmin=0.0085;
Fitsmax=0.37;
FitMaxIt=1000;
FitTarF=T;
ParStart={{"c1",True,0.2},{"c2",True,0.3},{"c3",True,0.3},{"c4",True,0.1},{"c5",True,0.1},{"c6",True,0.0},{"rhoisl",True,0,"270<#<400"},{"rhoosl",True,0,"270<#<400"},{"rhodm",True,0,"333<#<340"},{"Xa",True,0.002,"0.001<#<0.005"}};
PlRange={{0.002,0.5},{10^-3,10^2}};
plsc=1; (* Default *)
Ymode=1; (* Default *)
AddConstraints={}; (* Default *)
Smear={0,0.0}; (* Default *)
Tscf=1.0; (* Default *)
ycohscf={True,1.0,"0.5<#<2.5"};
LicoConstr={"","==1.0"}; (* Default *)
ExportFlag=True;
Print[AbsoluteTiming[BatchMultiFit[OutDir,Xnmode,expfileconc,YFileDir,YFileList,Nmaxsp,Nmaxst,FitFunc,FitMethod,Fitsmin,Fitsmax,FitMaxIt,FitTarF,ParStart,PlRange,plsc,Ymode,AddConstraints,Smear,Tscf,ycohscf,LicoConstr,ExportFlag]][[1]]]


(* with ycohscf(0.5-2.5), T *)
OutDir="MathematicaOut/SSS_3p0BC_1to5dil_OSL_SMALLER_005/";
Xnmode="X";
expfileconc={"export/im_0051239_caz_CapB_3p0BC_1to5dil-H2O_s-scaled_sIdI.chi",0.05};
Nmaxsp=6;
Nmaxst=0;
FitFunc=NMinimize;
FitMethod="DifferentialEvolution";
Fitsmin=0.0085;
Fitsmax=0.37;
FitMaxIt=1000;
FitTarF=T;
ParStart={{"c1",True,0.2},{"c2",True,0.3},{"c3",True,0.3},{"c4",True,0.1},{"c5",True,0.1},{"c6",True,0.0},{"rhoisl",True,0,"270<#<400"},{"rhoosl",True,0,"270<#<400"},{"rhodm",True,0,"333<#<340"},{"Xa",True,0.002,"0.001<#<0.005"}};PlRange={{0.002,0.5},{10^-3,10^2}};
plsc=1; (* Default *)
Ymode=1; (* Default *)
AddConstraints={}; (* Default *)
Smear={0,0.0}; (* Default *)
Tscf=1.0; (* Default *)
ycohscf={True,1.0,"0.5<#<2.5"};
LicoConstr={"","==1.0"}; (* Default *)
ExportFlag=True;
Print[AbsoluteTiming[BatchMultiFit[OutDir,Xnmode,expfileconc,YFileDir,YFileList,Nmaxsp,Nmaxst,FitFunc,FitMethod,Fitsmin,Fitsmax,FitMaxIt,FitTarF,ParStart,PlRange,plsc,Ymode,AddConstraints,Smear,Tscf,ycohscf,LicoConstr,ExportFlag]][[1]]];






LARGER vs SMALLER

3p0 005
12_40 for all

Normal

c1 = 0.2603335056982107
c2 = 0.09871976690753799
c3 = 0.3666043432215503
c4 = 0.16358030480959962
c5 = 0.08142956400372214
c6 = 0.029332515359379186
rhoisl = 324.5557663966116
rhoosl = 340.3200337156504
rhodm = 337.90644817452437
Xa = 0.0011974203824816794
chiXn1 = 1.9793317758617377

Target function values = 1.83615, 1.83615
Chi2Red function values = 3.35569, 3.35569


LARGER

c1 = 0.26343935901452903
c2 = 0.1065514547867438
c3 = 0.36025589751133735
c4 = 0.16254844974602134
c5 = 0.07857913915493214
c6 = 0.028625699786436382
rhoisl = 323.75058197961226
rhoosl = 340.1700363678106
rhodm = 337.6719096703893
Xa = 0.001034026930590134
chiXn1 = 1.8453580894626482

ici = 2.77215

Target function values = 1.84133, 1.84133
Chi2Red function values = 3.36006, 3.36006
LogdI function values = 1.84133, 1.84133




SMALLER

Fitted parameters:
c1 = 0.2597588244071314
c2 = 0.08806917989334791
c3 = 0.3705697186951222
c4 = 0.16668390796067453
c5 = 0.08372853712833851
c6 = 0.031189831915385397
rhoisl = 325.00068933337525
rhoosl = 340.40145562616857
rhodm = 338.0190762528449
Xa = 0.0011695917107574538
chiXn1 = 2.110809765304189

ici = 2.82012

Target function values = 1.8288, 1.8288
Chi2Red function values = 3.06812, 3.06812
LogdI function values = 1.8288, 1.8288







0p0 005
20_12 (16_16 for LARGER would be better)

Normal

c1 = 0.052586372247525714
c2 = 0.004510639736581632
c3 = 0.42054301527185284
c4 = 0.35619147143577523
c5 = 0.11911260635744349
c6 = 0.047055894950821076
rhoisl = 339.79942098618864
rhoosl = 351.7491919219455
rhodm = 339.9999999998499
Xa = 0.00244205907423795
chiXn1 = 1.8187777296904648

Target function values = 2.50882, 2.50882
Chi2Red function values = 11.6057, 11.6057

LARGER

c1 = 0.05729635465141869
c2 = 0.016283455859393073
c3 = 0.4162350962034741
c4 = 0.355466537795804
c5 = 0.11576579528749885
c6 = 0.03895276020241126
rhoisl = 339.67917065213095
rhoosl = 351.93748091953086
rhodm = 339.9999999976835
Xa = 0.0022139526395870256
chiXn1 = 1.752631871350909

ici = 3.57298

Target function values = 2.44415, 2.44415
Chi2Red function values = 14.6963, 14.6963
LogdI function values = 2.44415, 2.44415

SMALLER

c1 = 0.04575551255215571
c2 = 6.857041625705315*10^-10
c3 = 0.4187489235377322
c4 = 0.35923771374692304
c5 = 0.1219457176450851
c6 = 0.05431213183239976
rhoisl = 339.75304422546026
rhoosl = 351.5761351189539
rhodm = 340.
Xa = 0.002472822392122774
chiXn1 = 1.8691324005868033

ici = 3.67455

Target function values = 2.65355, 2.65355
Chi2Red function values = 12.0032, 12.0032
LogdI function values = 2.65355, 2.65355





check disl dosl range for SMALLER and LARGER

smaller diameters lead to thicker platelets, and chiXn increases as well
why is that if the SAXS OSL patterns do actually look the same, also the Y_X_ are the same in the relevant Q range?!






##################
native dispersions
##################

run_BatchMultiFit_20190223.m

	0p0 native

	YFileList=FileNames[YFileDir<>"SSS_180x360_P*_ST_230_200_N50_OSL.log"]; !!! n3 = 1-6 used in stacks !!!

	MathematicaOut/SSS_0p0BC_native_OSL_001/
	Nmaxsp=6;
	Nmaxst=5;
	Fitsmin=0.0085;
	Fitsmax=0.37;

	fix c_i to dilute ones from OSL_005/

	ycohscf={True,1.0,"0.5<#<2.5"};
	fit with cdConstr, i.e. d_i and chi, cdConstr={True,{"chi",True,0.0}};

	Results and observations:
	->does not fit, simulated stacks patterns look strange (many peaks)
	->noted that stacks with d_st ~ 22 nm and particles >3 unit cells thickness are physically unrealistic -> new simulations e.g. with particles of only 3 unit cells
	->diffuse SAS range strong structure factor due to high conc, which is not accounted by the stack structure factor -> consider fitting s > 0.05 only
	->diff btw native and dilute diffuse SAS is less for loaded samples, would ideally require new sim with their c_i


run_BatchMultiFit_20190224.m

	MathematicaOut/SSS_0p0BC_native_OSL_003/
	same as MathematicaOut/SSS_0p0BC_native_OSL_001/
	but:
	
	FitMethod="SimulatedAnnealing";
	Fitsmin=0.05;
	Fitsmax=0.37;

	Results and observations:
	-> same problems as above


new XNDiff scans

	20190227_betaSSS_abc_R_sigma_R_disl_dosl_scan.sh
	simulated stacks of platelets with 3 unit cells thickness only, 
	R=21.5:0.5:23.5, dR=0.5,1.0,2.0, dosl=disl=12,16,20 with dtot=32
	SSS_180x360_P${disl_str2}_${dosl_str2}_ST_${D_str2}_${dR_str2}_N50_OSL_SPST_3

	20190228_betaSSS_abc_R_sigma_R_disl_dosl_scan.sh
	simulated stacks of platelets with 1-3 unit cells thickness only (not fitted yet)
	SSS_180x360_P${disl_str2}_${dosl_str2}_ST_${D_str2}_${dR_str2}_N50_OSL_SPST_123



run_BatchMultiFit_20190304_native_0p0_SPST_3_123.m


	0p0 native
	stacks of platelets with 3 unit cells thickness only

	YFileList=FileNames[YFileDir<>"SSS_180x360_P*_ST_*_N50_OSL_SPST_3.log"];


	MathematicaOut/SSS_0p0BC_native_OSL_SPST_3_001/
	Nmaxsp=6;
	Nmaxst=5;
	FitFunc=NMinimize;
	FitMethod="DifferentialEvolution";
	Fitsmin=0.05;
	Fitsmax=0.37;
	fix c_i to dilute ones from OSL_005/
	ycohscf={True,1.0,"0.5<#<2.5"};
	fit with cdConstr, i.e. d_i and chi, cdConstr={True,{"chi",True,0.5}};

	Results and observations:
	-> does not fit, d_i usually 0.0, D=(211,)213,215,217(,220) would be actually a better range for D, use 1.0, 1.5 and 2.0 for dR
	-> c_i=3,4 (weigthed as in dil) with smaller disl+dosl might be good as well since Bragg peak is too wide with c_i=3 only, 4*45+2*16 = 212 <= min(D), i.e. only half of stabilizer layer
	-> form factor indicates that it is quite important to include 1 and 3,4 sp (see individual contrib plots/fits for dilute samples)
	-> 215_100_*_3.log : xmgrace -legend load -log xy SSS_180x360_P016_016_ST_215_100_N50_OSL_SPST_3_X_st_0[2-4].dat SSS_180x360_P016_016_ST_215_100_N50_OSL_SPST_3_X_sp_0[1-5].dat /home/martins/projects/BatchMultiFit/export/im_0051252_caz_CapB_0p0BC_native-H2O_s-scaled_sIdI.chi &


	same as MathematicaOut/SSS_0p0BC_native_OSL_SPST_3_001/ but w/ FindMinimum w/ start values:
	MathematicaOut/SSS_0p0BC_native_OSL_SPST_3_003/
	FitFunc=FindMinimum;
	FitMethod="Automatic";
	Fitsmin=0.05;
	Fitsmax=0.37;
	FitMaxIt=10000;
	same as OSL_SPST_3_003/, fixed c_i from OSL_005/ fits, use 1/4 for d_i

	Results and observations:
	-> does not fit as well, no improvement


	same as MathematicaOut/SSS_0p0BC_native_OSL_SPST_3_001/ but FindMinimum w/ start values, do not use chi/cdConstr i.e. fit directly c_i and d_i:
	MathematicaOut/SSS_0p0BC_native_OSL_SPST_3_005/

	cdConstr={False,{"chi",True,0.0(*,Constraint*)}};

	Results and observations:
	-> does not fit as well, little improvement




next steps 
new XNDiff scans

	d001 betaSSS
	2*pi/0.14035
	ans =  44.768

	determine d_st for 0p0 native with fityk
	im_0051252_caz_CapB_0p0BC_native-H2O.fit in reduction_20181220_Jakob_ChrHansen/Ivsq/w_subtraction/SAXS/
	fityk fit of 4 5 orders (3 Gaussian, 1 fixed at betaSSS Q001)
	1./([.055 .082 .1235 .1471]./[2 3 4 5]/2/pi)
	ans =

	   228.48   229.87   203.50   213.57


	use XNDiff collison control (stack mode 1) ???

	DMIN  = n3[k-1] * abs( sp( Gs, a3) ) / betrag (Gs) ; // DMIN -> n3[k-1] * d001
	DMIN += 2.0 * ( thickness_isl + thickness_osl ) ; // DMIN -> n3[k-1] * d001 + 2*dtot
	while ((D[k] = n_rand (par->td1, par->D1, par->D2)) < DMIN) ; // generate D[k] according to chosen distr until D > DMIN

	problem latter step would automatically exclude n3>3 for large dtot since n3==4 will never satisfy condition

	implemented in XNDiff stack mode 4 which will set randomly generated D[k] (Guasian distr) to DMIN (n3[k-1] * d001 + 2dtot) if DMIN > D[k]
	else if ( par->stackmode == 4 )
	{
		/* if DMIN + both soft stabilizer layers >  D[k] -> D[k] = DMIN */
		/* reasonable if difference btw max(DMIN) ~ <D[k]> but not max(DMIN) >> <D[k]> */
		DMIN += 2.0 * ( thickness_isl + thickness_osl ) ;
		while ((D[k] = n_rand (par->td1, par->D1, par->D2)) < 0.0 ) ;
		if ( DMIN > D[k] ) { D[k] = DMIN ; } 
	}


	similar as before but now include 1-4 sp but limit dtot to 32 with disl,dosl=8:4:24
	201903xx_betaSSS_abc_R_sigma_R_disl_dosl_scan.sh

	R=21.3:0.2:21.7, dR=1.0,1.5,(2.0) disl,dosl=8:4:24 with dtot=32
	SSS_180x360_P${disl_str2}_${dosl_str2}_ST_${D_str2}_${dR_str2}_N50_OSL_SPST_1234_STMOD4




run_BatchMultiFit_201903xx_native_0p0_SPST_1234_STMOD4.m

